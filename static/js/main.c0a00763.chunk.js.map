{"version":3,"sources":["components/Navbar.jsx","components/Emoji.jsx","components/NameEmoji.jsx","components/BoxEmoji.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","styled","div","EmojiStyle","Emoji","emoji","data-clipboard-text","NameStyle","name","document","querySelectorAll","clipboard","ClipboardJS","on","e","alert","console","log","prueba","BoxStyle","BoxEmoji","id","onClick","navigator","writeText","style","border","borderRadius","height","fontFamily","fontSize","padding","cursor","class","NameEmoji","emojiList","App","useEffect","consultarApi","useState","setEmoji","arr","a","url","fetch","api","json","InputText","InputStyle","type","placeholder","onKeyPress","event","key","target","value","map","meme","character","unicodeName","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0v9sBAkBeA,EAhBAC,IAAOC,IAAV,yY,OCQNC,EAAaF,IAAOC,IAAV,0EAKDE,EAbD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,cAACF,EAAD,UACI,qBAAKG,sBAAqBD,EAA1B,SAAkCA,OCKxCE,EAAYN,IAAOC,IAAV,0EAKAE,EAbD,SAAC,GAAmB,IAAlBI,EAAiB,EAAjBA,KAAMH,EAAW,EAAXA,MAClB,OACI,cAACE,EAAD,UACI,qBAAKD,sBAAqBD,EAA1B,SAAkCG,O,kBCC/B,WACX,IAAIN,EAAMO,SAASC,iBAAiB,OAChCC,EAAY,IAAIC,IAAYV,GAEhCS,EAAUE,GAAG,WAAW,SAAUC,GAC9BC,MAAM,aACRC,QAAQC,IAAIH,MAGdH,EAAUE,GAAG,SAAS,SAAUC,GAC9BE,QAAQC,IAAIH,MAIlBI,GAEA,I,EAyBMC,EAAWlB,IAAOC,IAAV,uHAOCkB,EAhCE,SAAC,GAAuB,IAAtBf,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,KAAc,EAARa,GAY5B,OACI,eAACF,EAAD,WACI,yBACIG,QAAS,WAAOC,UAAUZ,UAAUa,UAAUnB,IAC9CoB,MAAO,CAACC,OAAQ,OAAQC,aAAc,OAAQC,OAAQ,SAAUC,WAAY,WAAYC,SAAU,OAAQC,QAAS,WAAYC,OAAQ,WAF3I,UAGC,mBAAGC,MAAM,qBAHV,YAIA,cAAC,EAAD,CAAO5B,MAAOA,IACd,cAAC6B,EAAD,CAAW7B,MAAOA,EAAOG,KAAMA,Q,QChC3CQ,QAAQC,IAAIkB,GAoFGC,MAjFf,WACEC,qBAAU,WACRC,EAAajC,KACZ,IAEH,MAA0BkC,mBAAS,IAAnC,mBAAOlC,EAAP,KAAcmC,EAAd,KAEMF,EAAY,uCAAG,WAAMG,GAAN,mBAAAC,EAAA,6DACbC,EADa,8CACgCF,EADhC,iEAEDG,MAAMD,GAFL,cAEbE,EAFa,gBAGCA,EAAIC,OAHL,OAGbzC,EAHa,OAKnBmC,EAASnC,GALU,2CAAH,sDAWZ0C,EAAY,SAAC,GAAY,EAAX1C,MAWhB,OACI,cAAC2C,EAAD,UACI,uBAAOC,KAAK,OAAOC,YAAY,wBAC/BC,WAbU,SAAAC,GAClB,GAAgB,SAAbA,EAAMC,IACT,CACErC,QAAQC,IAAImC,EAAME,OAAOC,OACzB,IAAIrC,EAASkC,EAAME,OAAOC,OACpB,CAACrC,WACPoB,EAAapB,UAab8B,EAAa/C,IAAOC,IAAV,khBA0BhB,OACE,gCACE,cAAC,EAAD,UACE,6DAEF,cAAC6C,EAAD,IACC1C,EAAMmD,KAAI,SAAAC,GAAI,OACf,cAAC,EAAD,CACEpD,MAAOoD,EAAKC,UACZlD,KAAMiD,EAAKE,aACU,IAAhBC,KAAKC,iBC1EHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhE,SAASiE,eAAe,SAM1BZ,M","file":"static/js/main.c0a00763.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Navbar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 5rem;\r\n  flex-direction: column;\r\n  background-image: linear-gradient(to right, #3a00c2 0%, #aa0e83 50%, #e0c213 93%, #0848a7 100%);\r\n  background-size: 400%;\r\n  animation: fondo-anim 10s infinite alternate;\r\n\r\n  @keyframes fondo-anim{\r\n  0%{background-position: left;}\r\n  100%{background-position: right;}\r\n}\r\n\r\n`;\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\n\r\nconst Emoji = ({emoji}) => {\r\n    return(\r\n        <EmojiStyle>\r\n            <div data-clipboard-text={emoji}>{emoji}</div>\r\n        </EmojiStyle>\r\n    );\r\n};\r\n\r\nconst EmojiStyle = styled.div `\r\n    padding: 0.5rem;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nexport default Emoji;","import styled from 'styled-components';\r\n\r\nconst Emoji = ({name, emoji}) => {\r\n    return(\r\n        <NameStyle>\r\n            <div data-clipboard-text={emoji}>{name}</div>\r\n        </NameStyle>\r\n    );\r\n};\r\n\r\nconst NameStyle = styled.div `\r\n    padding: 0.5rem;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nexport default Emoji;","import styled from 'styled-components';\r\nimport Emoji from './Emoji'\r\nimport NameEmoji from './NameEmoji'\r\nimport ClipboardJS from \"clipboard\";\r\n\r\n\r\nconst prueba = () => {\r\n    var div = document.querySelectorAll('div');\r\n    var clipboard = new ClipboardJS(div);\r\n\r\n    clipboard.on('success', function (e) {\r\n        alert('copiado n')\r\n      console.log(e);\r\n    });\r\n\r\n    clipboard.on('error', function (e) {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nprueba()\r\n\r\nconst BoxEmoji = ({emoji, name, id}) => {\r\n    /* let emojiSelect = ''\r\n    const handleClick = event => {\r\n        console.log(event.id)\r\n        console.log(event.target.id)\r\n        console.log(event.target.value)\r\n        console.log(id)\r\n        console.log(emoji)\r\n        console.log(name)\r\n        emojiSelect = emoji\r\n    } */\r\n        \r\n    return(\r\n        <BoxStyle>  \r\n            <button \r\n                onClick={() => {navigator.clipboard.writeText(emoji)}}\r\n                style={{border: 'none', borderRadius: '10px', height: '2.5rem', fontFamily: 'Segoe Ui', fontSize: '1rem', padding: '0 0.5rem', cursor: 'pointer'}}\r\n            ><i class=\"far fa-clipboard\"></i> Copy!</button>           \r\n            <Emoji emoji={emoji}/>\r\n            <NameEmoji emoji={emoji} name={name}/> \r\n                      \r\n        </BoxStyle>\r\n    );\r\n};\r\n\r\nconst BoxStyle = styled.div `\r\n    border-top: 1px solid #ccc;\r\n    padding: 1rem;\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nexport default BoxEmoji;","import {useState} from 'react';\nimport {useEffect} from 'react';\nimport React from 'react';\nimport Navbar from './components/Navbar';\n// import InputText from './components/InputText';\nimport BoxEmoji from './components/BoxEmoji';\nimport styled from 'styled-components';\n\nimport emojiList from './emojiList.json';\nconsole.log(emojiList);\n\n\nfunction App() {\n  useEffect(() => {\n    consultarApi(emoji)\n  }, []);\n\n  const [emoji, setEmoji] = useState([]);\n\n  const consultarApi = async arr => {\n    const url = `https://emoji-api.com/emojis?search=${arr}&access_key=257614b3203fcfe4d98623094339d413da537965`;\n    const api = await fetch(url)\n    const emoji = await api.json()\n    \n    setEmoji(emoji)\n    // console.log(api)\n  } \n  \n\n\n  const InputText = ({emoji}) => {\n    const handleKeyup = event => {\n      if(event.key == 'Enter')\n      {\n        console.log(event.target.value)\n        let prueba = event.target.value\n        emoji={prueba}\n        consultarApi(prueba)\n      } else {}\n    }\n  \n      return(\n          <InputStyle>\n              <input type=\"text\" placeholder=\"Press Enter to search\"\n              onKeyPress={handleKeyup}\n              />\n          </InputStyle>\n      );\n  };\n  \n  const InputStyle = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 4rem;\n    flex-direction: column;\n    background-color: #ffffff;\n    margin: 1rem 0;\n  \n    input{\n      background-color: #ecebeb;\n      height: 2.5rem;\n      width: 80%;\n      border-radius: 10px;\n      border-style: none;\n      font-family: 'Segoe Ui';\n      font-size: 1rem;\n      padding: 0 0.5rem;\n    }\n    input:focus{\n      background-color: #d6d6d6;\n      outline-style: none;\n    }\n  `;\n\n  \n  return (\n    <div>\n      <Navbar>\n        <h1>Emoji Search ðŸš€</h1>\n      </Navbar>\n      <InputText />   \n      {emoji.map(meme => \n      <BoxEmoji \n        emoji={meme.character} \n        name={meme.unicodeName} \n        key={Math.random() * 10000}\n        \n      />)}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}